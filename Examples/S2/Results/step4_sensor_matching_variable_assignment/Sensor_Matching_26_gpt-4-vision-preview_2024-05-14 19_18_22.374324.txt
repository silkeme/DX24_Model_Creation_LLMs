```python
model_def = {
    'type': 'Symbolic',
    'x': ['der_tank1_level', 'der_tank2_level', 'der_tank_level', 'pump_flow', 'pump1_flow', 'valveLinear1_V_flow', 'valveLinear2_V_flow', 'valveLinear3_V_flow'],
    'f': ['f_tank1leak', 'f_tank2leak', 'f_valve1', 'f_valve2', 'f_valve3'],
    'z': ['FI1', 'LI2', 'FI3', 'LI4', 'FI5', 'LI6', 'FI7', 'pump_N', 'pump1_N', 'valveLinear1_opening', 'valveLinear2_opening', 'valveLinear3_opening'],
    'parameters': ['tank1_Diameter', 'tank2_Diameter', 'tank_Diameter', 'valveLinear1_Flow_Nominal', 'valveLinear2_Flow_Nominal', 'valveLinear3_Flow_Nominal', 'valveLinear1_dp_nominal', 'valveLinear2_dp_nominal', 'valveLinear3_dp_nominal', 'pump_V', 'pump1_V']
}

# Pump equations
pump_flow = pump_N * pump_V
pump1_flow = pump1_N * pump1_V

# Tank level equations based on flow in and out
der_tank1_level = (pump_flow - valveLinear1_V_flow - f_tank1leak) / (3.1415 * (tank1_Diameter / 2) ** 2)
der_tank2_level = (pump_flow - valveLinear3_V_flow - f_tank2leak) / (3.1415 * (tank2_Diameter / 2) ** 2)
der_tank_level = (valveLinear1_V_flow - pump1_flow) / (3.1415 * (tank_Diameter / 2) ** 2)

# Valve flow equations based on valve opening and nominal flow
valveLinear1_V_flow = valveLinear1_opening * valveLinear1_Flow_Nominal * (1 - f_valve1)
valveLinear2_V_flow = valveLinear2_opening * valveLinear2_Flow_Nominal * (1 - f_valve2)
valveLinear3_V_flow = valveLinear3_opening * valveLinear3_Flow_Nominal * (1 - f_valve3)

# Valve pressure drop equations based on nominal pressure drop
valveLinear1_dp = valveLinear1_opening * valveLinear1_dp_nominal
valveLinear2_dp = valveLinear2_opening * valveLinear2_dp_nominal
valveLinear3_dp = valveLinear3_opening * valveLinear3_dp_nominal

# Sensor equations
FI1 = pump_flow
LI2 = tank1_level
FI3 = valveLinear1_V_flow
LI4 = tank_level
FI5 = pump1_flow
LI6 = tank2_level
FI7 = valveLinear3_V_flow
```